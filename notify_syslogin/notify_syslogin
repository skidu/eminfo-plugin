#!/usr/bin/env perl
use strict;
use warnings;

# return codes
our ($state_ok,$state_warn,$state_crit,$state_unkn,$state_noop) = (0,1,2,3,4);

# return stuff
our ($rc, $result) = (0,'');

our $filename = (split /\//, __FILE__)[-1];
our $tracefile = "/var/tmp/$filename.trace";

# read plugin config here
our $authfile = `eminfo v $filename authfile`;
if ($? != 0) {
  $authfile = '/var/log/secure';
} else {
  chomp $authfile;
}

# define dev, inode, position for {authfile}
our ($dev, $inode, $position) = ();

# define savepos
sub savepos {
  my ($authfile, $position, $tracefile) = @_;
  if (open FH, ">$tracefile") {
  	($dev, $inode) = (stat $authfile)[0,1];
	print FH "$dev $inode $position";
	close FH;
  } else {
	return undef;
  }
}

# define loadpos
sub loadpos {
  my $tracefile = shift;
  if (open FH, "<$tracefile") {
	while (<FH>) {
  		($dev, $inode, $position) = (split /\s+/)[0,1,2];
		last;
	}
	close FH;
  }
}

# Main body begin
unless (-f $authfile) {
  print "{noop}:{str}:{ authpriv file [$authfile] not exists. }";
  exit $state_noop;
}
# 1. load position from tracefile
loadpos ($tracefile);
unless ($dev && $inode && $position) {  # maybe first running
  savepos ($authfile,0,$tracefile);	# save position again
  loadpos ($tracefile);			# load position again
}
# 2. read file dev,inode, checking rotated or not ?
my ($nowdev, $nowinode) = (stat $authfile)[0,1];
if ($dev ne $nowdev || $inode ne $nowinode) {	# maybe authfile logrotated
  savepos ($authfile,0,$tracefile);		# save position again
  loadpos ($tracefile);				# load position again
}
# 3. open authpri file and goto last position directly
unless (open FH, "<$authfile") {
  print "{noop}:{str}:{ open authpriv file [$authfile] failed. }";
  exit $state_noop;
}
seek (FH,$position,0);		# directly goto last position
# 4. scan authpri file record
my @record = ();
while (<FH>) {
  chomp;
  if (m/\A(\w+ \d+ .+? ).*Accepted password for (\w+) from (.+) port (\d+) .*\Z/i) {
	push @record,  "$1: user [$2] login from [$3:$4] ###";
  }
}
# 5. read nower position and save again.
my $newpos = tell(FH);
savepos ($authfile, $newpos, $tracefile);
close FH;
# 6. prepare last output
my $number = @record;
if ($number == 0) {
  print "{noop}:{str}:{no login event found}";
  exit $state_noop;
} else {
  while (@record) {
  	$result .= shift @record;
  }
  $result = "$number login event | $number login event | " . $result;
  print "{ok}:{str}:{$result}";
  exit $state_ok;
}
