#!/usr/bin/env perl
use strict;
use warnings;

# return codes
our ($state_ok,$state_warn,$state_crit,$state_unkn,$state_noop) = (0,1,2,3,4);

# return stuff
our ($rc, $result) = (0,'');

our $filename = (split /\//, __FILE__)[-1];
our $tracefile = "/var/tmp/$filename.trace";

# read plugin config here
our @white_iplist = ();
our $eminfo_basedir = "/usr/local/eminfo/";
our $white_iplist = `eminfo v $filename white_iplist`;

if ($? == 0) {
  chomp $white_iplist;
  $white_iplist =~ s/\A\s*file://;
  if ($white_iplist !~ /\A\s*\//) {
	$white_iplist = $eminfo_basedir.$white_iplist;
  }
  if (-f $white_iplist) {
	if(open FH, $white_iplist) {
		while (<FH>) {
			next if (/\A\s*\Z/ || /\A\s*#/ || /\A\s*;/ );
			push @white_iplist,  split /\s+/;
		}
		close FH;
	}
  } else {
	@white_iplist = split /\s+/, $white_iplist;
  }
}
# print "@white_iplist\n";

my $authfile = `eminfo v $filename authfile`;
if ($? != 0) {
  $authfile = '/var/log/secure';
}

# define dev, inode, position for {authfile}
our ($dev, $inode, $position) = ();

# define savepos
sub savepos {
  my ($authfile, $position) = @_;
  if (open FH, ">$tracefile") {
	($dev, $inode) = (stat $authfile)[0,1];
	print FH "$dev $inode $position";
	close FH;
  } else {
	return undef;
  }
}

# define loadpos
sub loadpos {
  my $tracefile = shift;
  if (open FH, "<$tracefile") {
	while (<FH>) {
  		($dev, $inode, $position) = (split /\s+/)[0,1,2];
		last;
	}
	close FH;
  }
}

# Main body begin

# 1. load last trace position.
loadpos ($tracefile);
unless ($dev && $inode && $position) {  # maybe first running
  savepos ($authfile,0);
  loadpos ($tracefile);
}

unless (open FH, "<$authfile") {
}
seek (FH,$position,0);		# directly goto last position
while (<FH>) {
  print if /Accepted password for/;
}
my $newpos = tell(FH);
savepos ($authfile, $newpos);

