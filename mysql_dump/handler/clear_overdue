#!/usr/bin/env bash


BASE_DIR="/usr/local/eminfo"
if [ -f ${BASE_DIR}/bin/include -a -s ${BASE_DIR}/bin/include ]; then
        source ${BASE_DIR}/bin/include 2>&1
        rc=$?
        [ "$rc" != "0" ] && {
                echo "load include file failed with status $rc"
                exit 1
        }   
else
        echo "${BASE_DIR}/bin/include not exist or empty. exit" 
        exit 1
fi

dump_reserve_time=$(read_eminfo_config mysql_dump dump_reserve_time)
dump_savedir=$(read_eminfo_config mysql_dump dump_savedir)

[ -z "${dump_reserve_time}" -o ! -z "${dump_reserve_time//[0-9]}" ] && dump_reserve_time=90
[ -z "${dump_savedir}" ] && { 
	echo "dump_savedir: not defined, nothing to do"
	exit 1
}
[ -d "${dump_backdir}" -a -w "${dump_backdir}" ] || {
	echo "directory: [${dump_savedir}] not exist or accessable, nothing to do"
	exit 1
} 

del_dirlst=$( /usr/bin/find "${dump_backdir}" -mindepth 1 -maxdepth 1 -type d -follow -ctime +${dump_reserve_time} 2>&- )
### as {for} struct can't deal filename with space.
echo -e "${del_dirlst}" | while read line
do
	if [ ! -z "${line//[ ]}" -a -d "${line}" ]; then
		if [ "$( sub_str "${line}" "${dump_backdir}" )" == "yes" ]; then
			/bin/rm -rf "${line}" 2>&-
		fi
	fi
done
result="overdued directories to be cleaned up: [${del_dirlst}] "
